-- TODO: Some of these statements should really be in 1 transaction
-- to maintain database integrity. Unfortunately, sqldelight does not
-- seem to support this.
-- insertTransaction(), insertEurotoken(), insertTransactionEurotoken()
-- should really be 1 SQL transaction.

-- The name 'Transaction' is apparently forbidden for a table name.
CREATE TABLE IF NOT EXISTS EuroTransaction (
    transaction_id INTEGER PRIMARY KEY,
    recipient BLOB NOT NULL,
    time TEXT DEFAULT CURRENT_TIMESTAMP NOT NULL
);

CREATE TABLE IF NOT EXISTS Eurotoken (
    eurotoken_id BLOB PRIMARY KEY,
    in_possession INTEGER NOT NULL CHECK (in_possession IN (0, 1))
);

CREATE TABLE IF NOT EXISTS TransactionEurotoken (
    transaction_id INTEGER NOT NULL,
    eurotoken_id BLOB NOT NULL,
    FOREIGN KEY(transaction_id) REFERENCES EuroTransaction(transaction_id),
    FOREIGN KEY(eurotoken_id) REFERENCES Eurotoken(eurotoken_id)
);

insertTransaction:
INSERT INTO EuroTransaction(recipient)
VALUES (?);

selectLastTransaction:
SELECT transaction_id
FROM EuroTransaction
WHERE rowid = LAST_INSERT_ROWID();

insertEurotoken:
REPLACE INTO Eurotoken(eurotoken_id, in_possession)
VALUES (?, 1);

selectLastEuroToken:
SELECT eurotoken_id
FROM Eurotoken
WHERE rowid = LAST_INSERT_ROWID();

insertTransactionEurotoken:
INSERT INTO TransactionEurotoken(transaction_id, eurotoken_id)
VALUES (?, ?);

getBalance:
SELECT COUNT(eurotoken_id)
FROM Eurotoken
WHERE in_possession = 1;

getOwnedEurotoken:
SELECT eurotoken_id
FROM Eurotoken
WHERE in_possession = 1
ORDER BY eurotoken_id
LIMIT ?;

markEurotokenAsSent:
UPDATE Eurotoken
SET in_possession = 0
WHERE eurotoken_id = ?;

getCoinHistory:
SELECT *
FROM EuroTransaction
INNER JOIN TransactionEurotoken
ON TransactionEurotoken.transaction_id = EuroTransaction.transaction_id
WHERE TransactionEurotoken.eurotoken_id = ?
ORDER BY time;
